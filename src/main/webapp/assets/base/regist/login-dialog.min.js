/**
 * 用户注册页脚本。
 * 
 * @since 2018-01-21
 * @version 1.0
 * @author Luowen
 */


/**
 * 页面基本逻辑管理。
 * 
 * @return {void}
 */
((function pageManage() {
	"use strict";


	const DEVICE_COOKIE_NAME = "device";
	const QUICK_LOGIN_KEY_COOKIE_NAME = "quickLoginKey";


	// 获取或生成设备信息。
	var sDevice = util.getCookie(DEVICE_COOKIE_NAME);
	if (!sDevice) {
		sDevice = util.device();
		util.setCookie(DEVICE_COOKIE_NAME, sDevice, {
			path: "/",
			domain: document.domain
		});
	}
	
	
	var oVueOption = {
		el: "#vueRoot",
		data: {
			// 登录表单相关数据。
			username: "",
			password: "",
			loginCode: $("[name=loginCode]").val(),
			checkCode: "",
			quickLogin: true,

			// 快捷登录相关数据。
			quickLoginKey: "",
			device: sDevice,
			quickLoginCode: "",

			// 登录成功跳转目标。
			target: util.getParam("target") || "_self"
		},
		mounted: function() {
			let _this = this;
			
			document.querySelector("[name=username]").focus();
	
			// 如果当前用户已经登录，则直接跳到目标页。
			if (window.USERID) {
				_this.loginSuccessDo({
					userId: USERID,
					username: USERNAME,
					nickname: NICKNAME,
					token: TOKEN,
					device: _this.device
				});
			} else {
				// 检查并自动快捷登录。
				_this.autoQuickLogin();
			}
		},
		methods: {
			/**
			 * 检查并自动快捷登录。
			 * 
			 * @return {void}
			 */
			autoQuickLogin() {
				let _this = this,
					sKey = util.getCookie(QUICK_LOGIN_KEY_COOKIE_NAME)
				;
				
				_this.quickLoginKey = sKey;
				
				
				if (sKey) {
					axios.post(TOP_DOMAIN + "api/base/frontStorage/get", {
						key: sKey
					}).then((oAjax) => {
						let oAjaxData = oAjax.data;

						if (oAjaxData.c == 1) {
							// 赋值。
							Object.assign(vVue.$data, JSON.parse(oAjaxData.r));
							
							// 自动登录。
							_this.quickLoginDo();
						}
					});
				}
			},
			
			/**
			 * 登录。
			 * 
			 * @return {void}
			 */
			login() {
				let _this = this;
				
				axios.post(TOP_DOMAIN + "api/base/user/login?token=" + TOKEN, {
					appId: APPID,
					loginCode: _this.loginCode,
					username: _this.username,
					password: _this.password,
					device: _this.device,
					quickLogin: _this.quickLogin
				}).then((oAjax) => {
					let oAjaxData = oAjax.data;

					if (oAjaxData.c == 1) {
						// 保存快捷登录码。
						if (_this.quickLogin) {
							_this.saveQuickLoginCode(_this.device, oAjaxData.r.quickLoginCode);
						}

						/*
						 * 登录后操作。
						 * 给上述远程保存留一些时间。
						 */
						setTimeout(function() {
							_this.loginSuccessDo(oAjaxData.r);
						}, 500);
					} else {
						alert("登录失败，" + oAjaxData.d);
					}
				});
			},
			
			
			/**
			 * 快捷登录。
			 * 
			 * @return {void}
			 */
			quickLoginDo() {
				let _this = this;

				axios.post(TOP_DOMAIN + "api/base/user/quickLogin?token=" + TOKEN, {
					appId: APPID,
					device: _this.device,
					quickLoginCode: _this.quickLoginCode
				}).then((oAjax) => {
					let oAjaxData = oAjax.data;

					if (oAjaxData.c == 1) {
						// 登录后操作。
						_this.loginSuccessDo(oAjaxData.r);
					}
				});
			},
			
			
			/**
			 * 登录成功后的操作。
			 * 
			 * @param {Object} 登录后的用户数据。
			 * @return {void}
			 */
			loginSuccessDo(oData) {
				var _this = this,
					sRedirectUrl = util.getParam("redirectUrl")
				;

				// 重定向页面。
				if (sRedirectUrl) {
					sRedirectUrl = util.substitute(decodeURIComponent(sRedirectUrl), oData);
				} else {
					sRedirectUrl = "index.html";
				}

				// 刷新目标。
				if (["self", "top", "parent"].indexOf(_this.target) == -1) {
					_this.target = "top";
				}
				window[_this.target].location.href = sRedirectUrl;
			},


			/**
			 * 保存快捷登录码。
			 * 
			 * @param {String} sDevice
			 * @param {String} sQuickLoginCode
			 * @return {void}
			 */
			saveQuickLoginCode(sDevice, sQuickLoginCode) {
				let _this = this;

				// 检查快捷登录键名。
				if (!_this.quickLoginKey) {
					_this.quickLoginKey = util.gid16();
					util.setCookie(QUICK_LOGIN_KEY_COOKIE_NAME, _this.quickLoginKey, {
						path: "/",
						domain: document.domain
					});
				}
				
				
				// 生成要保存的 JSON 数据。
				let sStorageData = JSON.stringify({
					device: sDevice,
					quickLoginCode: sQuickLoginCode
				});
				
				
				// 将快捷登录信息保存到服务端。
				axios.post(TOP_DOMAIN + "api/base/frontStorage/set", {
					key: _this.quickLoginKey,
					value: sStorageData
				});
			},
		}
	};
	
	
	var vVue = new Vue(oVueOption);
	oVueOption = null;
}))();


/**
 * 自动刷新页面，防止登录码过失失效。
 * 
 * @return {void}
 */
((function autoRefresh() {
	setInterval(() => {
		location.reload();
	}, 5 * 60 * 1000);
}))();


/**
 * 页面重置大小管理。
 * 
 * @return {void}
 */
((function resizeCallbackManage() {
	var fnResize = util.getParam("resizeCallback");

	if (fnResize) {
		$("load resize", () => {
			try {
				parent[fnResize] && parent[fnResize](
					document.body.scrollWidth,
					document.body.scrollHeight
				);
			} catch (oError) {
			}
		});
	}
}))();
